name: main

env:
  VERSION_MAJOR: 1
  VERSION_MINOR: 0
  VERSION_PATCH: 5
  VERSION_BUILD: ${{ github.run_number }}
  VERSION_SUFFIX: ${{ github.ref_name }}

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Get date string for version number
      id: date
      run: echo "::set-output name=today::$(date +'%Y.%-m%-d.%-H%-M.%-S')"
    - name: Generate version numbers
      run: echo "PACKAGE_VERSION=$VERSION_MAJOR.$VERSION_MINOR.$VERSION_PATCH-$VERSION_SUFFIX-$VERSION_BUILD" >> $GITHUB_ENV \
        && echo "ASSEMBLY_VERSION=$VERSION_MAJOR.0.0.0" >> $GITHUB_ENV \
        && echo "FILE_VERSION=${{ steps.date.outputs.today }}" >> $GITHUB_ENV
    - name: Versioning
      run: |
        echo "Package version is $PACKAGE_VERSION" \
        && echo "File version is $FILE_VERSION" \
        && echo "Assembly version is $ASSEMBLY_VERSION" \
        && sed -i -e "s/<PackageVersion>4.7.11<\/PackageVersion>/<PackageVersion>$PACKAGE_VERSION<\/PackageVersion>/g" AppExample/AppExample.csproj \
        && sed -i -e "s/<FileVersion>4.7.1.1<\/FileVersion>/<FileVersion>$FILE_VERSION<\/FileVersion>/g" AppExample/AppExample.csproj \
        && sed -i -e "s/<InformationalVersion>4.7.11<\/InformationalVersion>/<InformationalVersion>$PACKAGE_VERSION<\/InformationalVersion>/g" AppExample/AppExample.csproj \
        && sed -i -e "s/<AssemblyVersion>4.7.1.1<\/AssemblyVersion>/<AssemblyVersion>$ASSEMBLY_VERSION<\/AssemblyVersion>/g" AppExample/AppExample.csproj \
        && sed -i -e "s/<PackageVersion>4.7.11<\/PackageVersion>/<PackageVersion>$PACKAGE_VERSION<\/PackageVersion>/g" MarcelMelzig.TestEnvironment/MarcelMelzig.TestEnvironment.csproj \
        && sed -i -e "s/<FileVersion>4.7.1.1<\/FileVersion>/<FileVersion>$FILE_VERSION<\/FileVersion>/g" MarcelMelzig.TestEnvironment/MarcelMelzig.TestEnvironment.csproj \
        && sed -i -e "s/<InformationalVersion>4.7.11<\/InformationalVersion>/<InformationalVersion>$PACKAGE_VERSION<\/InformationalVersion>/g" MarcelMelzig.TestEnvironment/MarcelMelzig.TestEnvironment.csproj \
        && sed -i -e "s/<AssemblyVersion>4.7.1.1<\/AssemblyVersion>/<AssemblyVersion>$ASSEMBLY_VERSION<\/AssemblyVersion>/g" MarcelMelzig.TestEnvironment/MarcelMelzig.TestEnvironment.csproj \
        && sed -i -e "s/<PackageVersion>4.7.11<\/PackageVersion>/<PackageVersion>$PACKAGE_VERSION<\/PackageVersion>/g" TestProjectExample/TestProjectExample.csproj \
        && sed -i -e "s/<FileVersion>4.7.1.1<\/FileVersion>/<FileVersion>$FILE_VERSION<\/FileVersion>/g" TestProjectExample/TestProjectExample.csproj \
        && sed -i -e "s/<InformationalVersion>4.7.11<\/InformationalVersion>/<InformationalVersion>$PACKAGE_VERSION<\/InformationalVersion>/g" TestProjectExample/TestProjectExample.csproj \
        && sed -i -e "s/<AssemblyVersion>4.7.1.1<\/AssemblyVersion>/<AssemblyVersion>$ASSEMBLY_VERSION<\/AssemblyVersion>/g" TestProjectExample/TestProjectExample.csproj \
        && sed -i -e "s/4.7.1.1/$VERSION/g" README.md
    - name: Build
      run: dotnet build --no-restore -c Release
    - name: Test
      run: dotnet test -c Release --no-build --verbosity normal
