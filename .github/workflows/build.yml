name: build

env:
  VERSION_MAJOR: 1
  VERSION_MINOR: 0
  VERSION_PATCH: 5
  VERSION_BUILD: ${{ github.run_number }}
  VERSION_SUFFIX: ${{ github.ref_name }}

on:
  workflow_dispatch:
  push:
    branches: [ "main", "feature/*", "bugfix/*" ]
  pull_request:
    branches: [ "main", "feature/*", "bugfix/*" ]

jobs:
  build:

    runs-on: ubuntu-latest
    
    permissions: write-all

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Generate package version for regular builds
      run: echo "PACKAGE_VERSION=$VERSION_MAJOR.$VERSION_MINOR.$VERSION_PATCH-${VERSION_SUFFIX/\/#/}-$VERSION_BUILD" >> $GITHUB_ENV
      if: github.event_name != 'pull_request'
    - name: Generate package version for PRs
      run: echo "PACKAGE_VERSION=$VERSION_MAJOR.$VERSION_MINOR.$VERSION_PATCH-PR-$VERSION_BUILD" >> $GITHUB_ENV
      if: github.event_name == 'pull_request'
    - name: Generate assembly version
      run: echo "ASSEMBLY_VERSION=$VERSION_MAJOR.0.0.0" >> $GITHUB_ENV
    - name: Generate file version
      run: echo "FILE_VERSION=$(date +'%Y.%-m%-d.%-H%-M.%-S')" >> $GITHUB_ENV
    - name: Versioning
      run: |
        echo "Package version is $PACKAGE_VERSION"
        echo "File version is $FILE_VERSION"
        echo "Assembly version is $ASSEMBLY_VERSION"
        sed -i -e "s/<PackageVersion>4.7.11<\/PackageVersion>/<PackageVersion>$PACKAGE_VERSION<\/PackageVersion>/g" Directory.Build.props
        sed -i -e "s/<FileVersion>4.7.1.1<\/FileVersion>/<FileVersion>$FILE_VERSION<\/FileVersion>/g" Directory.Build.props
        sed -i -e "s/<InformationalVersion>4.7.11<\/InformationalVersion>/<InformationalVersion>$PACKAGE_VERSION<\/InformationalVersion>/g" Directory.Build.props
        sed -i -e "s/<AssemblyVersion>4.7.1.1<\/AssemblyVersion>/<AssemblyVersion>$ASSEMBLY_VERSION<\/AssemblyVersion>/g" Directory.Build.props
        sed -i -e "s/4.7.1.1/$PACKAGE_VERSION/g" README.md
    - name: pkgdeps/git-tag-action
      uses: pkgdeps/git-tag-action@v2.0.1
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        github_repo: ${{ github.repository }}
        git_commit_sha: ${{ github.sha }}
        version: ${{ env.PACKAGE_VERSION }}
        git_tag_prefix: "v"
    - name: Build
      run: dotnet build --no-restore -c Release
    - name: Test
      run: dotnet test -c Release --no-build --verbosity normal
    - name: Pack
      run: dotnet pack MarcelMelzig.TestEnvironment/MarcelMelzig.TestEnvironment.csproj -c Release -p:CONTINUOUS_INTEGRATION_BUILD=true
    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v3.1.2
      with:
        name: projectfiles
        path: /home/runner/work/TestEnvironment/TestEnvironment/*
